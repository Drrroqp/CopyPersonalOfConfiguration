 ////////////////////////////////////////////////////////////////////////////////
 //
 // Обработка копирования групп доступа, групп пользователей и персональных настроек пользователей.
 // Пользователь источник - Справочник.Пользователи.Ссылка.
 // Пользователь получатель - Справочник.Пользователи.Ссылка.
 // КопироватьГруппыДоступа, КопироватьГруппыПользователей, КопироватьПерсональныеНастройки - Булево.
 // При копировании групп доступа и групп пользователей, у пользователя получателя происходит очистка его групп.
 // При копировании персональных настроек можно сохранить или очистить настройки пользователя получателя.
 //
 ////////////////////////////////////////////////////////////////////////////////


#Область ОбработчикиСобытийЭлементовШапкиФормы



&НаКлиенте
Процедура ПользовательИсточникПриИзменении(Элемент)  
	
	Если Объект.ПользовательИсточник = Объект.ПользовательПолучатель Тогда
	
		ОчисткаРеквизитаИсточникФормы();	
		
	КонецЕсли;
	

КонецПроцедуры



&НаКлиенте
Процедура ПользовательПолучательПриИзменении(Элемент)
	
	Если Объект.ПользовательИсточник = Объект.ПользовательПолучатель Тогда
		
		ОчисткаРеквизитаПолучательФормы(); 
		
	КонецЕсли;

КонецПроцедуры      
#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СкопироватьПрава(Команда)	
		
	Если Объект.КопироватьПерсональныеНастройки Тогда
	
		ЧтоДелатьПослеВопроса = Новый ОписаниеОповещения("ПослеОтветаНаВопрос", ЭтотОбъект);
	
		ПоказатьВопрос(ЧтоДелатьПослеВопроса, "Очистить персональные настройки пользователя-получателя перед копированием?",РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Да,"Очистка настроек");	
		
	Иначе 
		
		СкопироватьПраваНаСервере();  
		
	КонецЕсли;	
		
	
	
КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции 

&НаСервере
Процедура ОчисткаРеквизитаПолучательФормы()

	Сообщение = Новый СообщениеПользователю();
	Сообщение.Текст = "Укажите разных пользователей";
	Сообщение.сообщить();
	Объект.ПользовательПолучатель = Справочники.Пользователи.ПустаяСсылка();	

КонецПроцедуры

&НаСервере
Процедура ОчисткаРеквизитаИсточникФормы()

	Сообщение = Новый СообщениеПользователю();
	Сообщение.Текст = "Укажите разных пользователей";
	Сообщение.сообщить();
	Объект.ПользовательИсточник = Справочники.Пользователи.ПустаяСсылка();	

КонецПроцедуры

&НаКлиенте
Процедура ПослеОтветаНаВопрос(Ответ, ДополнительныеПараметры) Экспорт

	Если Ответ = КодВозвратаДиалога.Да Тогда
		
		ОчищатьНастройкиПользователя = Истина;
		СкопироватьПраваНаСервере(ОчищатьНастройкиПользователя);
		
	Иначе 
		
		СкопироватьПраваНаСервере();	
		
	КонецЕсли;
	
	

КонецПроцедуры



&НаСервере
Процедура ОчиститьВсеНастройкиНаСервере() 
	
	ОчищаемыеНастройки = Новый Массив; 
	
	ОчищаемыеНастройки.Добавить("НастройкиОтчетов");
	ОчищаемыеНастройки.Добавить("НастройкиВнешнегоВида");
	ОчищаемыеНастройки.Добавить("ДанныеФорм");
	ОчищаемыеНастройки.Добавить("ПерсональныеНастройки");
	ОчищаемыеНастройки.Добавить("Избранное");
	ОчищаемыеНастройки.Добавить("НастройкиПечати");
	ОчищаемыеНастройки.Добавить("ПрочиеПользовательскиеНастройки");
	
	МассивПользователей = Новый Массив;
	МассивПользователей.Добавить(Объект.ПользовательПолучатель);
	
	Обработки.НастройкиПользователей.УдалитьНастройкиПользователей(ОчищаемыеНастройки, МассивПользователей);
	
КонецПроцедуры

&НаСервере
Процедура КопироватьГруппыДоступаУпрощенныйИнтерфейс(Источник, Получатель)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ГруппыДоступаПользователи.Ссылка.Профиль КАК Профиль
	|ИЗ
	|	Справочник.ГруппыДоступа.Пользователи КАК ГруппыДоступаПользователи
	|ГДЕ
	|	(ГруппыДоступаПользователи.Пользователь = &Пользователь
	|			ИЛИ ГруппыДоступаПользователи.Пользователь В
	|				(ВЫБРАТЬ
	|					СоставыГруппПользователей.ГруппаПользователей
	|				ИЗ
	|					РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
	|				ГДЕ
	|					СоставыГруппПользователей.Пользователь = &Пользователь))";
	
	
	Запрос.УстановитьПараметр("Пользователь", Источник);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = "У пользователя-источника нет групп доступа";
		Сообщение.сообщить();
		Возврат;
	КонецЕсли; 
	
	Выборка = РезультатЗапроса.Выбрать();
	
	
	// Очистка всех профилей
	УправлениеДоступом.ВыключитьПрофильПользователю(Получатель);
	
	Пока Выборка.Следующий() Цикл
		УправлениеДоступом.ВключитьПрофильПользователю(Получатель, Выборка.Профиль);
	КонецЦикла;  
	
	Сообщение = Новый СообщениеПользователю();
	Сообщение.Текст = "Копирование групп доступа прошло успешно...";
	Сообщение.сообщить();		
	
КонецПроцедуры

&НаСервере
Процедура КопироватьГруппыДоступа(Источник, Получатель)

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ГруппыДоступаПользователи.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ГруппыДоступа.Пользователи КАК ГруппыДоступаПользователи
	|ГДЕ
	|	ГруппыДоступаПользователи.Пользователь = &ПользовательДляОчистки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГруппыДоступаПользователи.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ГруппыДоступа.Пользователи КАК ГруппыДоступаПользователи
	|ГДЕ
	|	ГруппыДоступаПользователи.Пользователь = &Пользователь";
	
	Запрос.УстановитьПараметр("Пользователь", Источник);
	Запрос.УстановитьПараметр("ПользовательДляОчистки", Получатель);
	
	РезультатЗапроса        = Запрос.ВыполнитьПакет();
	
	Если РезультатЗапроса[1].Пустой() Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = "У пользователя-источника нет групп доступа";
		Сообщение.сообщить();
		Возврат;
	КонецЕсли; 
	
	ВыборкаОчистки          = РезультатЗапроса[0].Выбрать();
	ВыборкаКопирования = РезультатЗапроса[1].Выбрать();
	
	Блокировка = Новый БлокировкаДанных();
	ЭлементБлокировки = Блокировка.Добавить("Справочник.ГруппыДоступа");
	ЭлементБлокировки.ИсточникДанных = РезультатЗапроса[0];
	//@skip-check lock-out-of-try
	Блокировка.Заблокировать();
	Пока ВыборкаОчистки.Следующий() Цикл
		
		ГруппыДоступаОбъект = ВыборкаОчистки.Ссылка.ПолучитьОбъект();
		
		ЭтотПользовательЕстьВГруппеДоступа = ГруппыДоступаОбъект.Пользователи.Найти(Получатель, "Пользователь");
		
		Если ЭтотПользовательЕстьВГруппеДоступа <> Неопределено Тогда
			
			
			ГруппыДоступаОбъект.Пользователи.Удалить(ЭтотПользовательЕстьВГруппеДоступа);
			ГруппыДоступаОбъект.Записать();
			
		КонецЕсли;
		
	КонецЦикла;
	
	Пока ВыборкаКопирования.Следующий() Цикл
		
		ГруппыДоступаОбъектДляКопирования = ВыборкаКопирования.Ссылка.ПолучитьОбъект();    
		
		НоваяСтрока = ГруппыДоступаОбъектДляКопирования.Пользователи.Добавить();
		НоваяСтрока.Пользователь = Получатель;
		ГруппыДоступаОбъектДляКопирования.Записать();
		
	КонецЦикла;
		
	Сообщение = Новый СообщениеПользователю();
	Сообщение.Текст = "Копирование групп доступа прошло успешно...";
	Сообщение.сообщить();
	
КонецПроцедуры

&НаСервере
Процедура КопироватьГруппыПользователей(Источник, Получатель)

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ГруппыПользователейСостав.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ГруппыПользователей.Состав КАК ГруппыПользователейСостав
	|ГДЕ
	|	ГруппыПользователейСостав.Пользователь = &Пользователь
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГруппыПользователейСостав.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ГруппыПользователей.Состав КАК ГруппыПользователейСостав
	|ГДЕ
	|	ГруппыПользователейСостав.Пользователь = &ПользовательДляОчистки";
	
	Запрос.УстановитьПараметр("Пользователь", Источник);
	Запрос.УстановитьПараметр("ПользовательДляОчистки", Получатель);
	
	РезультатЗапроса      = Запрос.ВыполнитьПакет();
	
	Если РезультатЗапроса[0].Пустой() Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = "У пользователя-источника нет групп пользователей";
		Сообщение.сообщить();
		Возврат;
	КонецЕсли;
	
	Выборка                        = РезультатЗапроса[0].Выбрать();
	ВыборкаДляОчистки = РезультатЗапроса[1].Выбрать();
	
	Блокировка = Новый БлокировкаДанных();
	ЭлементБлокировки = Блокировка.Добавить("Справочник.ГруппыПользователей");
	ЭлементБлокировки.ИсточникДанных = РезультатЗапроса[1];
	//@skip-check lock-out-of-try
	Блокировка.Заблокировать();
	
	Пока ВыборкаДляОчистки.Следующий() Цикл 
		
		
		СправочникОбъект = ВыборкаДляОчистки.Ссылка.ПолучитьОбъект();
		ЭтотПользовательУжеЕстьВГруппе = СправочникОбъект.Состав.Найти(Получатель, "Пользователь");
		Если ЭтотПользовательУжеЕстьВГруппе <> Неопределено Тогда
			
			
			СправочникОбъект.Состав.Удалить(ЭтотПользовательУжеЕстьВГруппе);
			СправочникОбъект.Записать();
			
		КонецЕсли;
		
	КонецЦикла;
	
	
	Пока Выборка.Следующий() Цикл 
		
		СправочникОбъект = Выборка.Ссылка.ПолучитьОбъект();
		
		
		НоваяСтрока = СправочникОбъект.Состав.Добавить();
		НоваяСтрока.Пользователь = Получатель;
		СправочникОбъект.Записать();
		
	КонецЦикла;
	
		
	Сообщение = Новый СообщениеПользователю();
	Сообщение.Текст = "Копирование группы пользователей прошло успешно...";
	Сообщение.сообщить();

КонецПроцедуры


&НаСервере
Процедура СкопироватьПраваНаСервере(ОчищатьНастройкиПользователя = Ложь)
	
	Если Объект.ПользовательИсточник = Справочники.Пользователи.ПустаяСсылка() ИЛИ Объект.ПользовательПолучатель = Справочники.Пользователи.ПустаяСсылка() Тогда
	
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = "Заполните пользователя-получателя и пользователя-источника";
		Сообщение.сообщить();
		Возврат;
		
	ИначеЕсли НЕ Объект.КопироватьГруппыДоступа И НЕ Объект.КопироватьГруппыПользователей И НЕ Объект.КопироватьПерсональныеНастройки Тогда
		
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = "Не выбраны настройки копирования";
		Сообщение.сообщить();
		Возврат;
	
	КонецЕсли;
	
	НачатьТранзакцию();
	
	Попытка
		
		ПользовательИсточникСправочник     = Объект.ПользовательИсточник;
		ПользовательПолучательСправочник = Объект.ПользовательПолучатель;
		
		//@skip-check reading-attribute-from-database
		ПользовательИсточникИБ     = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(ПользовательИсточникСправочник.ИдентификаторПользователяИБ);
		//@skip-check reading-attribute-from-database
		ПользовательПолучательИБ = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(ПользовательПолучательСправочник.ИдентификаторПользователяИБ);
		
		Если Объект.КопироватьГруппыДоступа Тогда
			
			УпрощенныйИнтерфейс = УправлениеДоступомСлужебный.УпрощенныйИнтерфейсНастройкиПравДоступа();
			
			
			Если УпрощенныйИнтерфейс Тогда
				
				 КопироватьГруппыДоступаУпрощенныйИнтерфейс(ПользовательИсточникСправочник, ПользовательПолучательСправочник);
						
			Иначе
				
				 КопироватьГруппыДоступа(ПользовательИсточникСправочник, ПользовательПолучательСправочник);
				
			КонецЕсли;
			
		КонецЕсли;				
			
			
		Если Объект.КопироватьГруппыПользователей Тогда
	
			КопироватьГруппыПользователей(ПользовательИсточникСправочник, ПользовательПолучательСправочник);	
			
		КонецЕсли;
		
		Если Объект.КопироватьПерсональныеНастройки Тогда
			
			Если ОчищатьНастройкиПользователя Тогда
			
				ОчиститьВсеНастройкиНаСервере();	
			
			КонецЕсли;
			
			ПользователиСлужебный.СкопироватьНастройкиПользователя(ПользовательИсточникИБ.Имя, ПользовательПолучательИБ.Имя);
			Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст = "Копирования настроек прошло успешно...";
			Сообщение.сообщить();
			
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();	
		
	Исключение
		ОтменитьТранзакцию();
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = "Копирование не получилось!";
		Сообщение.сообщить();
		ВызватьИсключение;
	КонецПопытки;
	
		
	

	
КонецПроцедуры

#КонецОбласти




